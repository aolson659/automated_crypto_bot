'''Functions for print statements that display current market data, data on currently open positions, and data on overall profitability of the strategy.'''


def print_no_positoin(df, current_price, long_profit, long_loss, short_profit, short_loss, balance, initial_balance, total):
    width = 20
    print('------------------------------------------------------------------------------------------------')
    print(f"Timestamp: {df['Timestamp'].iloc[-1]}")
    print(f"{'Ticker:':<{width}}{current_price:.2f}")
    print(f"{'Recent Open:':<{width}}{df['Open'].iloc[-1]:.2f}")
    print(f"{'Recent High:':<{width}}{df['High'].iloc[-1]:.2f}")
    print(f"{'Recent Low:':<{width}}{df['Low'].iloc[-1]:.2f}")
    print(f"{'Recent Close:':<{width}}{df['Close'].iloc[-1]:.2f}")
    print(f"{'Recent Volume:':<{width}}{df['Volume'].iloc[-1]:.2f}")
    print(f"{'MA 20:':<{width}}{df['MA_20'].iloc[-1]:.2f}")
    print(f"{'MA 50:':<{width}}{df['MA_50'].iloc[-1]:.2f}")
    print()
    print(f"{'Long Wins:':<{width}}{long_profit:.2f}")
    print(f"{'Long Losses:':<{width}}{long_loss:.2f}")
    print()
    print(f"{'Short Wins:':<{width}}{short_profit:.2f}")
    print(f"{'Short Losses:':<{width}}{short_loss:.2f}")
    print()
    print(f"{'Total P/L:':<{width}}{1 + ((balance - initial_balance) / initial_balance):.4f}")
    if short_loss > 0 or long_loss > 0:
        print(f"{'Winrate:':<{width}}{(long_profit + short_profit) / (long_loss + short_loss):.4f}")
    print(f"{'Total Trades:':<{width}}{long_profit + long_loss + short_profit + short_loss:.4f}")
    print(f"{'Balance:':<{width}}{total:.4f}")

def print_long_position(initial_price, current_price, leverage, tp, sl):
    print()
    print('------------------------------------------------------------------------------------------------')
    print('Long Open', f"{initial_price:.3f}")
    print('Current Price', f"{current_price:.3f}")
    print()
    print('Long PL', f"{((((current_price - initial_price) / initial_price) - 0.0015) * leverage) + 1:.3f}")
    print('Long TP', f"{tp:.3f}")
    print('Long SL', f"{sl:.3f}")
    print()

def print_short_position(initial_price, current_price, leverage, tp, sl):
    print()
    print('------------------------------------------------------------------------------------------------')
    print('Short Open', f"{initial_price:.3f}")
    print('Current Price', f"{current_price:.3f}")
    print()
    print('Short PL', f"{((((initial_price - current_price) / initial_price) - 0.0015) * leverage) + 1:.3f}")
    print('Short TP', f"{tp:.3f}")
    print('Short SL', f"{sl:.3f}")
    print()

def print_paper_trade_no_position(df, current_price, long_profit, long_loss, short_profit, short_loss, balance, initial_balance):
    width = 20
    print('------------------------------------------------------------------------------------------------')
    print(f"Timestamp: {df['Timestamp'].iloc[-1]}")
    print(f"{'Ticker:':<{width}}{current_price:.2f}")
    print(f"{'Recent Open:':<{width}}{df['Open'].iloc[-1]:.2f}")
    print(f"{'Recent High:':<{width}}{df['High'].iloc[-1]:.2f}")
    print(f"{'Recent Low:':<{width}}{df['Low'].iloc[-1]:.2f}")
    print(f"{'Recent Close:':<{width}}{df['Close'].iloc[-1]:.2f}")
    print(f"{'Recent Volume:':<{width}}{df['Volume'].iloc[-1]:.2f}")
    print(f"{'MA 20:':<{width}}{df['MA_20'].iloc[-1]:.2f}")
    print(f"{'MA 50:':<{width}}{df['MA_50'].iloc[-1]:.2f}")
    print()
    print(f"{'Long Wins:':<{width}}{long_profit:.2f}")
    print(f"{'Long Losses:':<{width}}{long_loss:.2f}")
    print()
    print(f"{'Short Wins:':<{width}}{short_profit:.2f}")
    print(f"{'Short Losses:':<{width}}{short_loss:.2f}")
    print()
    print(f"{'Total P/L:':<{width}}{1 + ((balance - initial_balance) / initial_balance):.4f}")
    if short_loss > 0 or long_loss > 0:
        print(f"{'Winrate:':<{width}}{(long_profit + short_profit) / (long_loss + short_loss):.4f}")
    print(f"{'Total Trades:':<{width}}{long_profit + long_loss + short_profit + short_loss:.4f}")
    print(f"{'Balance:':<{width}}{balance:.4f}")

def paper_trade_long_position(initial_price, current_price, leverage, tp, sl):
    print()
    print('------------------------------------------------------------------------------------------------')
    print('Long Open', f"{initial_price:.3f}")
    print('Current Price', f"{current_price:.3f}")
    print()
    print('Long PL', f"{((((current_price - initial_price) / initial_price) - 0.0015) * leverage) + 1:.3f}")
    print('Long TP', f"{tp:.3f}")
    print('Long SL', f"{sl:.3f}")
    print()

def paper_trade_short_position(initial_price, current_price, leverage, tp, sl):
    print()
    print('------------------------------------------------------------------------------------------------')
    print('Short Open', f"{initial_price:.3f}")
    print('Current Price', f"{current_price:.3f}")
    print()
    print('Short PL', f"{((((initial_price - current_price) / initial_price) - 0.0015) * leverage) + 1:.3f}")
    print('Short TP', f"{tp:.3f}")
    print('Short SL', f"{sl:.3f}")
    print()